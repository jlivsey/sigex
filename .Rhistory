if (H==9) gamma <- seq(1:n)^(-.2)
amat <- svd(toeplitz(gamma))
bmat <- amat$v %*% diag(sqrt(amat$d)) %*% t(amat$v)
#c <- .5  # Bartlett case
draws <- matrix(0,nrow=50,ncol=MC)
for(b in 1:50)
{
for(k in 1:MC)
{
draws[b,k] <- ParzenSpec(.02*b,n,bmat)
}
print(b)
}
ParzenSpec
dim(draws)
draws[1,1:100]
BartSpec
BartlettSpec
#c <- .5  # Bartlett case
draws <- matrix(0,nrow=50,ncol=MC)
for(b in 1:50)
{
for(k in 1:MC)
{
draws[b,k] <- ParzenSpec(.02*b,n,bmat)
}
print(b)
}
load("C:\\Users\\Tucker\\Documents\\Research\\MultiSA\\multiSAwork_5-2-14.RData")
ls()
ufit1
## wipe
rm(list=ls())
library(devtools)
setwd("C:\\Users\\Tucker\\Documents\\GitHub\\sigex")
load_all(".")
start.date <- c(10,1,2012)
end.date <- day2date(dim(retail)[1]-1,start.date)
period <- 365
# calendar calculations
start.day <- date2day(start.date[1],start.date[2],start.date[3])
end.day <- date2day(end.date[1],end.date[2],end.date[3])
begin <- c(start.date[3],start.day)
end <- c(end.date[3],end.day)
## create ts object and plot
dataALL.ts <- sigex.load(retail,begin,period,colnames(retail),TRUE)
## series 4482 with no transform
transform <- "none"
aggregate <- FALSE
subseries <- 5
range <- NULL
data.ts <- sigex.prep(dataALL.ts,transform,aggregate,subseries,range,TRUE)
## levels
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,FALSE,i,7)
}
dev.off()
## growth rates
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,TRUE,i,7)
}
dev.off()
# choose ordering: 1 = Sunday, 2 = Monday, etc.
first.day <- 1
week.days <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
days.index <- seq(first.day,first.day+6) %% 7
days.index[days.index==0] <- 7
ragged.fore <- day2week(start.date) - first.day
if(ragged.fore > 0) { data.ts <- c(rep(NA,ragged.fore),data.ts) }
ragged.aft <- length(data.ts) %% 7
if(ragged.aft > 0) { data.ts <- c(data.ts,rep(NA,7-ragged.aft))}
data.mat <- t(matrix(data.ts,nrow=7))
data.ts <- ts(data.mat,start=c(ceiling(start.day/7),start.date[3]),frequency=52,
names=week.days[days.index])
plot(data.ts)
N <- dim(data.ts)[2]
T <- dim(data.ts)[1]
# model construction
mdl <- NULL
mdl <- sigex.add(mdl,seq(1,N),"svarma",c(1,0,1,0,52),list(1,1,1,1),"process",1)
mdl <- sigex.meaninit(mdl,data.mat,0)
constraint <- cbind(rep(0,132), diag(133)[-1,])
#constraint <- NULL
par.mle <- sigex.default(mdl,data.ts,constraint)
psi.mle <- sigex.par2psi(par.mle,mdl)
## run fitting
fit.mle <- sigex.mlefit(data.ts,par.mle,constraint,mdl,"bfgs",debug=TRUE)
par.mle <- sigex.default(mdl,data.ts)[[1]]
psi.last
98+28
163*3.1
day2week(start.date)
day2week
data.mat[1:4,]
day2date
sigex.embed.daily2weekly <- function(data.ts,first.day,start.date)
{
##########################################################################
#
#	sigex.embed.daily2weekly
# 	    Copyright (C) 2020  Tucker McElroy
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
############################################################################
################# Documentation #####################################
#
#	Purpose: embeds a daily time series as a weekly time series
#	Inputs:
#		data.ts: a T x 1 matrix ts object; any  values to be imputed
#			must be encoded with NA in that entry.  The NA is for missing value,
#     or an enforced imputation (e.g. extreme-value adjustment).
#   first.day is a number between 1 and 7 that indicates what day of the week
#     should correspond to the first component of the 7-vector.
#     So 1 = Sunday, 2 = Monday, 3 = Tuesday, 4 = Wednesday,
#       5 = Thursday, 6 = Friday, 7 = Sunday.
#		start.date: a given starting date in month-day-year format,
#			a 3-element vector
#	outputs:
#   data.ts: a T x 7 matrix ts object; any  values to be imputed
#			are marked with NA in that entry.  The NA is for missing value.
# Requires: day2week, date2day
#
##############################################################
start.day <- date2day(start.date[1],start.date[2],start.date[3])
week.days <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
days.index <- seq(first.day,first.day+6) %% 7
days.index[days.index==0] <- 7
ragged.fore <- day2week(start.date) - first.day
if(ragged.fore > 0) { data.ts <- c(rep(NA,ragged.fore),data.ts) }
ragged.aft <- length(data.ts) %% 7
if(ragged.aft > 0) { data.ts <- c(data.ts,rep(NA,7-ragged.aft))}
data.mat <- t(matrix(data.ts,nrow=7))
data.ts <- ts(data.mat,start=c(ceiling(start.day/7),start.date[3]),frequency=52,
names=week.days[days.index])
return(data.ts)
}
## wipe
rm(list=ls())
library(devtools)
setwd("C:\\Users\\Tucker\\Documents\\GitHub\\sigex")
load_all(".")
start.date <- c(10,1,2012)
end.date <- day2date(dim(retail)[1]-1,start.date)
period <- 365
# calendar calculations
start.day <- date2day(start.date[1],start.date[2],start.date[3])
end.day <- date2day(end.date[1],end.date[2],end.date[3])
begin <- c(start.date[3],start.day)
end <- c(end.date[3],end.day)
## create ts object and plot
dataALL.ts <- sigex.load(retail,begin,period,colnames(retail),TRUE)
## series 4482 with no transform
transform <- "none"
aggregate <- FALSE
subseries <- 5
range <- NULL
data.ts <- sigex.prep(dataALL.ts,transform,aggregate,subseries,range,TRUE)
## levels
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,FALSE,i,7)
}
dev.off()
## growth rates
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,TRUE,i,7)
}
dev.off()
first.day <- 1
data.ts <- sigex.embed.daily2weekly(data.ts,first.day)
data.ts <- sigex.embed.daily2weekly(data.ts,first.day,start.date)
plot(data.ts)
date2day
day2date
N <- dim(data.ts)[2]
T <- dim(data.ts)[1]
# model construction
mdl <- NULL
mdl <- sigex.add(mdl,seq(1,N),"svarma",c(1,0,1,0,52),list(1,1,1,1),"process",1)
mdl <- sigex.meaninit(mdl,data.mat,0)
dim(data.ts)
mdl <- sigex.meaninit(mdl,data.ts,0)
constraint <- cbind(rep(0,132), diag(133)[-1,])
#constraint <- NULL
par.mle <- sigex.default(mdl,data.ts,constraint)
psi.mle <- sigex.par2psi(par.mle,mdl)
par.mle
easter.dates <- read.table("easter500.txt")
## wipe
rm(list=ls())
library(devtools)
setwd("C:\\Users\\Tucker\\Documents\\GitHub\\sigex")
load_all(".")
start.date <- c(10,1,2012)
end.date <- day2date(dim(retail)[1]-1,start.date)
period <- 365
# calendar calculations
start.day <- date2day(start.date[1],start.date[2],start.date[3])
end.day <- date2day(end.date[1],end.date[2],end.date[3])
begin <- c(start.date[3],start.day)
end <- c(end.date[3],end.day)
## create ts object and plot
dataALL.ts <- sigex.load(retail,begin,period,colnames(retail),TRUE)
## series 4482 with no transform
transform <- "none"
aggregate <- FALSE
subseries <- 5
range <- NULL
data.ts <- sigex.prep(dataALL.ts,transform,aggregate,subseries,range,TRUE)
## levels
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,FALSE,i,7)
}
dev.off()
## growth rates
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,TRUE,i,7)
}
dev.off()
first.day <- 1
data.ts <- sigex.daily2weekly(data.ts,first.day,start.date)
plot(data.ts)
N <- dim(data.ts)[2]
T <- dim(data.ts)[1]
easter.dates <- read.table("easter500.txt")
ls()
help("load_all")
easter.dates <- read.table("data\\easter500.txt")
easter.reg1 <- gethol(easter.dates,0,0,start.date,end.date)
easter.reg2 <- gethol(easter.dates,8,-1,start.date,end.date)
cyber.dates <- read.table("data\\cyber400.txt")
cyber.reg <- gethol(cyber.dates,0,0,start.date,end.date)
black.dates <- read.table("data\\black400.txt")
black.reg <- gethol(black.dates,0,0,start.date,end.date)
super.dates <- read.table("data\\super400.txt")
super.reg <- gethol(super.dates,0,0,start.date,end.date)
labor.dates <- read.table("data\\labor400.txt")
labor.reg <- gethol(labor.dates,0,0,start.date,end.date)
cny.dates <- read.table("data\\cny200.txt")
cny.reg <- gethol(cny.dates,0,0,start.date,end.date)
easter.reg1 <- sigex.daily2weekly(easter.reg1,first.day,start.date)
easter.reg2
easter.reg2[1:50]
easter.reg2[1:100]
easter.reg2[1:400]
easter.reg2[1:300]
easter.reg2 <- sigex.daily2weekly(easter.reg2,first.day,start.date)
easter.reg2
easter.reg2[1:100,]
easter.reg2[800:,]
easter.reg2[800:end,]
easter.reg2[-seq(1,800),]
easter.reg2[-seq(1,800):]
easter.reg2[-seq(1,800),]
easter.reg2[-seq(1,100),]
cyber.reg <- sigex.daily2weekly(cyber.reg,first.day,start.date)
black.reg <- sigex.daily2weekly(black.reg,first.day,start.date)
super.reg <- sigex.daily2weekly(super.reg,first.day,start.date)
labor.reg <- sigex.daily2weekly(labor.reg,first.day,start.date)
cny.reg <- sigex.daily2weekly(cny.reg,first.day,start.date)
dim(cny.reg)
dim(data.ts)
period
sigex.daily2weekly
begin
# model construction
mdl <- NULL
mdl <- sigex.add(mdl,seq(1,N),"svarma",c(1,0,1,0,52),list(1,1,1,1),"process",1)
mdl <- sigex.meaninit(mdl,data.ts,0)
for(i in 1:N) {
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg1[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-day"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg2[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-pre"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cyber.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Cyber"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(black.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Black"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(super.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Super"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(labor.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Labor"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cny.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="CNY"))
}
delta <-  sigex.delta(mdl,0)
T
length(reg)
reg <- easter.reg1[,1]
reg.diff <- filter(reg,delta,method="convolution",sides=1)[length(delta):T]
i
reg.diff
reg
help("filter")
start.date
easter.reg1[is.na(easter.reg1)] <- 0
easter.reg1
easter.reg2[is.na(easter.reg2)] <- 0
cyber.reg[is.na(cyber.reg)] <- 0
black.reg[is.na(black.reg)] <- 0
super.reg[is.na(super.reg)] <- 0
labor.reg[is.na(labor.reg)] <- 0
cny.reg[is.na(cny.reg)] <- 0
# model construction
mdl <- NULL
mdl <- sigex.add(mdl,seq(1,N),"svarma",c(1,0,1,0,52),list(1,1,1,1),"process",1)
mdl <- sigex.meaninit(mdl,data.ts,0)
for(i in 1:N) {
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg1[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-day"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg2[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-pre"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cyber.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Cyber"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(black.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Black"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(super.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Super"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(labor.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Labor"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cny.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="CNY"))
}
dim(mdl[[4]])
dim(mdl[[4]][[1]])
dim(mdl[[4]][[2]])
mdl[[4]][[2]][1:20,]
constraint <- NULL
#constraint <- NULL
par.mle <- sigex.default(mdl,data.ts,constraint)
psi.mle <- sigex.par2psi(par.mle,mdl)
par.mle
length(par.mle[[4]])
## wipe
rm(list=ls())
library(devtools)
setwd("C:\\Users\\Tucker\\Documents\\GitHub\\sigex")
load_all(".")
start.date <- c(10,1,2012)
end.date <- day2date(dim(retail)[1]-1,start.date)
period <- 365
# calendar calculations
start.day <- date2day(start.date[1],start.date[2],start.date[3])
end.day <- date2day(end.date[1],end.date[2],end.date[3])
begin <- c(start.date[3],start.day)
end <- c(end.date[3],end.day)
## create ts object and plot
dataALL.ts <- sigex.load(retail,begin,period,colnames(retail),TRUE)
## series 4482 with no transform
transform <- "none"
aggregate <- FALSE
subseries <- 5
range <- NULL
data.ts <- sigex.prep(dataALL.ts,transform,aggregate,subseries,range,TRUE)
## levels
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,FALSE,i,7)
}
dev.off()
## growth rates
par(mfrow=c(1,1))
for(i in 1:length(subseries))
{
sigex.specar(data.ts,TRUE,i,7)
}
dev.off()
first.day <- 1
data.ts <- sigex.daily2weekly(data.ts,first.day,start.date)
plot(data.ts)
N <- dim(data.ts)[2]
T <- dim(data.ts)[1]
easter.dates <- read.table("data\\easter500.txt")
easter.reg1 <- gethol(easter.dates,0,0,start.date,end.date)
easter.reg2 <- gethol(easter.dates,8,-1,start.date,end.date)
cyber.dates <- read.table("data\\cyber400.txt")
cyber.reg <- gethol(cyber.dates,0,0,start.date,end.date)
black.dates <- read.table("data\\black400.txt")
black.reg <- gethol(black.dates,0,0,start.date,end.date)
super.dates <- read.table("data\\super400.txt")
super.reg <- gethol(super.dates,0,0,start.date,end.date)
labor.dates <- read.table("data\\labor400.txt")
labor.reg <- gethol(labor.dates,0,0,start.date,end.date)
cny.dates <- read.table("data\\cny200.txt")
cny.reg <- gethol(cny.dates,0,0,start.date,end.date)
easter.reg1 <- sigex.daily2weekly(easter.reg1,first.day,start.date)
easter.reg2 <- sigex.daily2weekly(easter.reg2,first.day,start.date)
cyber.reg <- sigex.daily2weekly(cyber.reg,first.day,start.date)
black.reg <- sigex.daily2weekly(black.reg,first.day,start.date)
super.reg <- sigex.daily2weekly(super.reg,first.day,start.date)
labor.reg <- sigex.daily2weekly(labor.reg,first.day,start.date)
cny.reg <- sigex.daily2weekly(cny.reg,first.day,start.date)
# replace ragged NA with zero
easter.reg1[is.na(easter.reg1)] <- 0
easter.reg2[is.na(easter.reg2)] <- 0
cyber.reg[is.na(cyber.reg)] <- 0
black.reg[is.na(black.reg)] <- 0
super.reg[is.na(super.reg)] <- 0
labor.reg[is.na(labor.reg)] <- 0
cny.reg[is.na(cny.reg)] <- 0
# model construction
mdl <- NULL
mdl <- sigex.add(mdl,seq(1,N),"svarma",c(1,0,1,0,52),list(1,1,1,1),"process",1)
mdl <- sigex.meaninit(mdl,data.ts,0)
for(i in 1:N) {
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg1[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-day"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(easter.reg2[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Easter-pre"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cyber.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Cyber"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(black.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Black"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(super.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Super"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(labor.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="Labor"))
mdl <- sigex.reg(mdl,i,ts(as.matrix(cny.reg[,i]),
start=c(ceiling(start.day/7),start.date[3]),frequency=52,names="CNY"))
}
#constraint <- cbind(rep(0,132), diag(133)[-1,])
constraint <- NULL
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(2,2,2,2,2,2,2),NULL))
dim(constraint)
constraint[,1:20]
constraint[1,]
constraint[2,]
constraint[6,]
list(2,2,2,2,2,2,2)
list(rep(2,7))
#constraint <- cbind(rep(0,132), diag(133)[-1,])
constraint <- NULL
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(2,2,2,2,2,2,2),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(3,3,3,3,3,3,3),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(4,4,4,4,4,4,4),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(5,5,5,5,5,5,5),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(6,6,6,6,6,6,6),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(7,7,7,7,7,7,7),NULL))
constraint <- rbind(constraint,sigex.constrainreg(mdl,data.ts,list(8,8,8,8,8,8,8),NULL))
dim(constraint)
par.mle <- sigex.default(mdl,data.ts,constraint)
psi.mle <- sigex.par2psi(par.mle,mdl)
psi.mle
## run fitting
fit.mle <- sigex.mlefit(data.ts,par.mle,constraint,mdl,"bfgs",debug=TRUE)
psi.last
psi.mle
## HERE
param <- sigex.psi2par(psi.mle,mdl,data.ts)
## HERE
param <- sigex.psi2par(psi.last,mdl,data.ts)
param
##  model checking
resid.mle <- sigex.resid(psi.mle,mdl,data.ts)[[1]]
##  model checking
resid.mle <- sigex.resid(psi.last,mdl,data.ts)[[1]]
resid.mle <- sigex.load(t(Re(resid.mle)),start(data.ts),frequency(data.ts),colnames(data.ts),TRUE)
acf(resid.mle,lag.max=2*53)
acf(resid.mle,lag.max=3*53)
length(psi.last)
dim(constraint)
dput(psi.last)
psi.mle
acf(resid.mle[1,],lag.max=3*53)
acf(resid.mle[,1],lag.max=3*53)
acf(resid.mle[,2],lag.max=3*53)
acf(resid.mle[,3],lag.max=3*53)
acf(resid.mle[,4],lag.max=3*53)
acf(resid.mle[,3],lag.max=3*53)
acf(resid.mle[,4],lag.max=3*53)
acf(resid.mle[,5],lag.max=3*53)
acf(resid.mle[,6],lag.max=3*53)
acf(resid.mle[,6],lag.max=53)
acf(resid.mle[,6],lag.max=60)
acf(resid.mle[,7],lag.max=3*53)
par.mle <- sigex.psi2par(psi.last,mdl,data.ts)
par.mle
## run fitting
fit.mle <- sigex.mlefit(data.ts,par.mle,constraint,mdl,"bfgs",debug=TRUE)
## manage output
psi.mle <- sigex.eta2psi(fit.mle[[1]]$par,constraint)
dput(psi.mle)
fit.mle[[1]]
fit.mle[[2]]
##  model checking
resid.mle <- sigex.resid(psi.mle,mdl,data.ts)[[1]]
resid.mle <- sigex.load(t(Re(resid.mle)),start(data.ts),frequency(data.ts),colnames(data.ts),TRUE)
acf(resid.mle,lag.max=2*53)
